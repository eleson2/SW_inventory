generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model audit_log {
  id          String   @id
  entity_type String   @db.VarChar(50)
  entity_id   String
  action      String   @db.VarChar(20)
  changes     Json
  user_id     String?
  timestamp   DateTime @default(now())

  @@index([entity_type, entity_id])
  @@index([timestamp(sort: Desc)])
  @@index([user_id])
}

model customers {
  id          String   @id
  name        String   @db.VarChar(100)
  code        String   @unique @db.VarChar(20)
  description String?
  active      Boolean  @default(true)
  created_at  DateTime @default(now())
  updated_at  DateTime
  lpars       lpars[]

  @@index([active])
  @@index([code])
}

model lpar_software {
  id                 String   @id
  lpar_id            String
  software_id        String
  current_version    String   @db.VarChar(50)
  current_ptf_level  String?  @db.VarChar(50)
  previous_version   String?  @db.VarChar(50)
  previous_ptf_level String?  @db.VarChar(50)
  installed_date     DateTime @default(now())
  rolled_back        Boolean  @default(false)
  lpars              lpars    @relation(fields: [lpar_id], references: [id], onDelete: Cascade)
  software           software @relation(fields: [software_id], references: [id])

  @@unique([lpar_id, software_id])
  @@index([lpar_id])
  @@index([lpar_id, rolled_back])
  @@index([software_id])
}

model lpars {
  id                 String          @id
  name               String          @db.VarChar(100)
  code               String          @unique @db.VarChar(20)
  customer_id        String
  description        String?
  current_package_id String?
  active             Boolean         @default(true)
  created_at         DateTime        @default(now())
  updated_at         DateTime
  lpar_software      lpar_software[]
  packages           packages?       @relation(fields: [current_package_id], references: [id])
  customers          customers       @relation(fields: [customer_id], references: [id])

  @@index([active])
  @@index([code])
  @@index([current_package_id])
  @@index([customer_id])
}

model package_items {
  id          String   @id
  package_id  String
  software_id String
  version     String   @db.VarChar(50)
  ptf_level   String?  @db.VarChar(50)
  required    Boolean  @default(true)
  order_index Int
  created_at  DateTime @default(now())
  packages    packages @relation(fields: [package_id], references: [id], onDelete: Cascade)
  software    software @relation(fields: [software_id], references: [id])

  @@unique([package_id, software_id])
  @@index([package_id])
  @@index([package_id, order_index])
  @@index([software_id])
}

model packages {
  id            String          @id
  name          String          @db.VarChar(100)
  code          String          @unique @db.VarChar(20)
  description   String?
  version       String          @db.VarChar(50)
  release_date  DateTime        @db.Date
  active        Boolean         @default(true)
  created_at    DateTime        @default(now())
  updated_at    DateTime
  lpars         lpars[]
  package_items package_items[]

  @@unique([code, version])
  @@index([active])
  @@index([code])
  @@index([release_date(sort: Desc)])
}

model software {
  id                String          @id
  name              String          @db.VarChar(100)
  vendor_id         String
  description       String?
  current_version   String          @db.VarChar(50)
  current_ptf_level String?         @db.VarChar(50)
  version_history   Json            @default("[]")
  active            Boolean         @default(true)
  created_at        DateTime        @default(now())
  updated_at        DateTime
  lpar_software     lpar_software[]
  package_items     package_items[]
  vendors           vendors         @relation(fields: [vendor_id], references: [id])

  @@index([active])
  @@index([name])
  @@index([vendor_id])
}

model vendors {
  id            String     @id
  name          String     @db.VarChar(100)
  code          String     @unique @db.VarChar(20)
  website       String?    @db.VarChar(255)
  contact_email String?    @db.VarChar(255)
  active        Boolean    @default(true)
  created_at    DateTime   @default(now())
  updated_at    DateTime
  software      software[]

  @@index([active])
  @@index([code])
}
