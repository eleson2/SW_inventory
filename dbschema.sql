-- Mainframe Software Inventory System\n-- Database Schema (PostgreSQL syntax - adaptable to DB2/Oracle/SQL Server)\n\n-- ============================================================================\n-- MASTER DATA TABLES\n-- ============================================================================\n\n-- Customers (Tenants)\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    contact_info VARCHAR(255),\n    status VARCHAR(20) DEFAULT 'ACTIVE',\n    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    modified_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    CONSTRAINT chk_customer_status CHECK (status IN ('ACTIVE', 'INACTIVE', 'SUSPENDED'))\n);\n\nCREATE INDEX idx_customer_name ON customer(customer_name);\n\n-- Software Vendors\nCREATE TABLE vendor (\n    vendor_id SERIAL PRIMARY KEY,\n    vendor_name VARCHAR(100) NOT NULL UNIQUE,\n    contact_info VARCHAR(255),\n    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    modified_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- ============================================================================\n-- SOFTWARE CATALOG\n-- ============================================================================\n\n-- Individual Software Products\nCREATE TABLE software_product (\n    product_id SERIAL PRIMARY KEY,\n    vendor_id INTEGER NOT NULL,\n    product_name VARCHAR(200) NOT NULL,\n    vendor_designation VARCHAR(255) NOT NULL,\n    version VARCHAR(50),\n    ptf_level VARCHAR(50),\n    description TEXT,\n    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    modified_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    CONSTRAINT fk_product_vendor FOREIGN KEY (vendor_id) \n        REFERENCES vendor(vendor_id) ON DELETE RESTRICT,\n    CONSTRAINT uq_vendor_designation UNIQUE (vendor_id, vendor_designation)\n);\n\nCREATE INDEX idx_product_vendor ON software_product(vendor_id);\nCREATE INDEX idx_product_name ON software_product(product_name);\nCREATE INDEX idx_product_version ON software_product(version, ptf_level);\n\n-- Software Packages (Tested bundles)\nCREATE TABLE package (\n    package_id SERIAL PRIMARY KEY,\n    package_name VARCHAR(100) NOT NULL,\n    package_version VARCHAR(50) NOT NULL,\n    release_date DATE NOT NULL,\n    description TEXT,\n    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    modified_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    CONSTRAINT uq_package_version UNIQUE (package_name, package_version)\n);\n\nCREATE INDEX idx_package_release ON package(release_date DESC);\n\n-- Products included in each Package\nCREATE TABLE package_product (\n    package_product_id SERIAL PRIMARY KEY,\n    package_id INTEGER NOT NULL,\n    product_id INTEGER NOT NULL,\n    is_mandatory BOOLEAN DEFAULT FALSE,\n    notes TEXT,\n    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    CONSTRAINT fk_pkgprod_package FOREIGN KEY (package_id) \n        REFERENCES package(package_id) ON DELETE CASCADE,\n    CONSTRAINT fk_pkgprod_product FOREIGN KEY (product_id) \n        REFERENCES software_product(product_id) ON DELETE RESTRICT,\n    CONSTRAINT uq_package_product UNIQUE (package_id, product_id)\n);\n\nCREATE INDEX idx_pkgprod_package ON package_product(package_id);\nCREATE INDEX idx_pkgprod_product ON package_product(product_id);\n\n-- ============================================================================\n-- LPAR INVENTORY\n-- ============================================================================\n\n-- Logical Partitions\nCREATE TABLE lpar (\n    lpar_id SERIAL PRIMARY KEY,\n    customer_id INTEGER NOT NULL,\n    lpar_name VARCHAR(100) NOT NULL,\n    environment VARCHAR(50),\n    status VARCHAR(20) DEFAULT 'ACTIVE',\n    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    modified_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    CONSTRAINT fk_lpar_customer FOREIGN KEY (customer_id) \n        REFERENCES customer(customer_id) ON DELETE RESTRICT,\n    CONSTRAINT chk_lpar_status CHECK (status IN ('ACTIVE', 'INACTIVE', 'DECOMMISSIONED')),\n    CONSTRAINT uq_lpar_name UNIQUE (lpar_name)\n);\n\nCREATE INDEX idx_lpar_customer ON lpar(customer_id);\nCREATE INDEX idx_lpar_status ON lpar(status);\n\n-- Package Installation History on LPARs\nCREATE TABLE lpar_package_history (\n    history_id SERIAL PRIMARY KEY,\n    lpar_id INTEGER NOT NULL,\n    package_id INTEGER NOT NULL,\n    install_date DATE NOT NULL,\n    end_date DATE,\n    is_current BOOLEAN DEFAULT TRUE,\n    installed_by VARCHAR(100),\n    notes TEXT,\n    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    CONSTRAINT fk_lparpkg_lpar FOREIGN KEY (lpar_id) \n        REFERENCES lpar(lpar_id) ON DELETE CASCADE,\n    CONSTRAINT fk_lparpkg_package FOREIGN KEY (package_id) \n        REFERENCES package(package_id) ON DELETE RESTRICT,\n    CONSTRAINT chk_date_order CHECK (end_date IS NULL OR end_date >= install_date)\n);\n\nCREATE INDEX idx_lparpkg_lpar ON lpar_package_history(lpar_id);\nCREATE INDEX idx_lparpkg_current ON lpar_package_history(lpar_id, is_current);\nCREATE INDEX idx_lparpkg_install_date ON lpar_package_history(install_date DESC);\n\n-- Actual Software installed on LPARs\nCREATE TABLE lpar_software (\n    lpar_software_id SERIAL PRIMARY KEY,\n    lpar_id INTEGER NOT NULL,\n    product_id INTEGER NOT NULL,\n    install_date DATE NOT NULL,\n    removed_date DATE,\n    is_active BOOLEAN DEFAULT TRUE,\n    deviation_reason VARCHAR(255),\n    installed_by VARCHAR(100),\n    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    modified_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    CONSTRAINT fk_lparsoft_lpar FOREIGN KEY (lpar_id) \n        REFERENCES lpar(lpar_id) ON DELETE CASCADE,\n    CONSTRAINT fk_lparsoft_product FOREIGN KEY (product_id) \n        REFERENCES software_product(product_id) ON DELETE RESTRICT,\n    CONSTRAINT chk_software_date_order CHECK (removed_date IS NULL OR removed_date >= install_date)\n);\n\nCREATE INDEX idx_lparsoft_lpar ON lpar_software(lpar_id);\nCREATE INDEX idx_lparsoft_product ON lpar_software(product_id);\nCREATE INDEX idx_lparsoft_active ON lpar_software(lpar_id, is_active);\nCREATE INDEX idx_lparsoft_install_date ON lpar_software(install_date DESC);\n\n-- ============================================================================\n-- AUDIT TRAIL\n-- ============================================================================\n\n-- Optional: Change Tracking Table\nCREATE TABLE audit_log (\n    audit_id SERIAL PRIMARY KEY,\n    table_name VARCHAR(50) NOT NULL,\n    record_id INTEGER NOT NULL,\n    action VARCHAR(20) NOT NULL,\n    changed_by VARCHAR(100),\n    change_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    old_values JSONB,\n    new_values JSONB,\n    CONSTRAINT chk_audit_action CHECK (action IN ('INSERT', 'UPDATE', 'DELETE'))\n);\n\nCREATE INDEX idx_audit_table ON audit_log(table_name, record_id);\nCREATE INDEX idx_audit_date ON audit_log(change_date DESC);\n